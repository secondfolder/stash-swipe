@import "../../styles/mixins.scss";
@import "../../styles/variables.scss";


.VideoItem {
  height: 100%;
  scroll-snap-align: start;
  scroll-snap-stop: always;
  background: #000;
  position: relative;
  border: 1px solid transparent;

  display: grid;
  grid-template-rows: [canvas-top main-top] 1fr [main-bottom scrubber-top] max-content [scrubber-bottom canvas-bottom];
  grid-template-columns: [canvas-start main-start] 1fr [main-end controls-start] (
      max-content
    ) [controls-end canvas-end];
    
  .video-js {
    .vjs-control-bar {
      height: 1.5em;
      .vjs-time-control {
        padding: 0 35px;
        font-size: $timecode-font-size;
      }
      .vjs-progress-control {
        height: 0.5em;
        margin: 0 15px;
        width: calc(100% - (15px * 2));
        bottom: 1.5em;
        .vjs-progress-holder {
          margin: 0;
        }
      }
    }
  }

  .tap-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 7rem;
    opacity: 0;
    pointer-events: none;
  }
  .tap-icon.transparent {
    opacity: 0.5 !important;
  }
  
  
  .controls {
    position: relative;
    grid-column: controls-start / controls-end;
    /* 
    For some reason safari will always place the video on top of the controls when in force-landscape mode. For some
    reason overlapping it with the scrubber slightly fixes this issue.
    */
    grid-row: main-top / scrubber-bottom;
    padding-bottom: 36px;
    
    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: end;
    margin-right: $ui-spacer;
    margin-bottom: $ui-spacer;
    z-index: 2;
    pointer-events: none;
    
    > * {
      pointer-events: initial;
    }

    button {
      appearance: none;
      border: 0;
      padding: 0;
      cursor: pointer;

      display: flex;
      justify-content: center;
      align-items: center;
      height: $ui-button-size;
      width: $ui-button-size;

      background-color: transparent;
      color: white;
      font-size: 28px;
      line-height: 1;
    }

    &.active {
      button {
        background-color: $ui-active-bg-color;
      }
    }
  }
  
  
  .scene-info {
    grid-column: main-start / canvas-end;
    grid-row: main-top / canvas-bottom;
    z-index: 1;

    align-self: flex-end;
    background-color: rgba(black, 0.7);
    padding-top: $scene-info-spacer;
    padding-right: $ui-button-size + $ui-spacer + $scene-info-spacer;
    margin-bottom: calc(
      $scrubber-height + $scene-info-spacer + $timecode-font-size +
        $scrubber-container-padding-bottom + $scrubber-container-padding-top +
        10px
    );
    padding-left: 15px;

    display: grid;
    transition: opacity ease-in-out;

    // Stop click events propagating to the video.
    position: relative;

    // Title
    h5 {
      font-size: 1.1rem;
    }

    .date {
      font-size: 0.9rem;
    }

    .performers {
      font-size: 0.9rem;
    }

    .studio {
      font-size: 0.9rem;
    }
  }
  
  
  .toggleable-ui {
    position: relative;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap-reverse;
    justify-content: center;
    transition: opacity ease-in-out;
    max-height: calc(var(--y-unit) * 100 - 100px);
  }

  .toggleable-ui-button {
    transition: opacity ease-in-out;
  }
}

.VideoItem {
  .ScenePlayer {
    grid-column: canvas-start / canvas-end;
    grid-row: canvas-top / canvas-bottom;
    width: 100%;
    height: 100%;
    object-fit: contain;

    justify-content: center;
    align-items: center;
    display: flex;
    
    .VideoPlayer {
      width: 100%;
      height: 100%;
    }

    &.cover {
      video {
        object-fit: cover;
      }
      .vjs-poster {
        background-size: cover;
      }
    }
    
    .video-wrapper {
      height: 100%;
    }
  }
}